version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: farda-mcp-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-farda_mcp}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - farda-network

  backend:
    build:
      context: ../../
      dockerfile: ops/docker/backend.Dockerfile
    container_name: farda-mcp-backend
    environment:
      APP_NAME: ${APP_NAME:-Farda MCP}
      APP_VERSION: ${APP_VERSION:-0.1.0}
      APP_ENV: ${APP_ENV:-local}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-farda_mcp}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key}
      CORS_ORIGINS: '["http://localhost:3000","http://localhost:8080"]'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../../backend:/app
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - farda-network
    restart: unless-stopped

  web:
    build:
      context: ../../
      dockerfile: ops/docker/web.Dockerfile
    container_name: farda-mcp-web
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080/api}
      NEXT_PUBLIC_APP_NAME: ${APP_NAME:-Farda MCP}
      NEXT_PUBLIC_APP_VERSION: ${APP_VERSION:-0.1.0}
    depends_on:
      - backend
    volumes:
      - ../../web:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "${WEB_PORT:-3000}:3000"
    networks:
      - farda-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: farda-mcp-nginx
    volumes:
      - ../docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${NGINX_PORT:-8080}:80"
    depends_on:
      - backend
      - web
    networks:
      - farda-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  farda-network:
    driver: bridge
